{"version":3,"sources":["Todoapp.jsx","App.jsx","index.jsx"],"names":["Todo","todo","todos","setTodos","index","className","onClick","newTodos","filter","ele","i","length","Todoapp","props","useState","value","setValue","type","onChange","e","target","console","log","map","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMAGMA,EAAO,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,KAAOC,EAA8B,EAA9BA,MAAQC,EAAsB,EAAtBA,SAAWC,EAAW,EAAXA,MAOrC,OACI,sBAAKC,UAAU,OAAf,UACI,4BAAKJ,IACL,wBAAQK,QAThB,WACI,IAAMC,EAAWL,EAAMM,QAAO,SAACC,EAAMC,GAAP,OAAaA,IAAMN,KACjDD,EAASI,GACLA,EAASI,QAMT,mBAiCGC,MA5Bf,SAAkBC,GACd,MAAyBC,mBAAS,CAAC,KAAnC,mBAAKC,EAAL,KAAaC,EAAb,KACA,EAA2BF,mBAAS,CAAC,SAAU,WAA/C,mBAAOZ,EAAP,KAAeC,EAAf,KAaA,OACI,sBAAKE,UAAU,UAAf,UACI,uBAAOY,KAAK,OAAOC,SAX3B,SAAgBC,GACZH,EAASG,EAAEC,OAAOL,OAClBM,QAAQC,IAAIP,GACZA,EAAQ,CAACA,UAQgCA,MAAOA,IADhD,IAC0D,uBACtD,wBAAQT,QAPhB,WACIH,EAAS,GAAD,mBAAKD,GAAL,CAAYa,KACpBC,EAAS,KAKL,iBACA,qBAAKX,UAAU,WAAf,SACCH,EAAMqB,KAAI,SAACtB,EAAOG,GAAR,OACP,cAAC,EAAD,CAAkBH,KAAMA,EAAMC,MAAOA,EAAOC,SAAUA,EAAUC,MAAOA,GAA5DA,YC7BZoB,MARf,SAAcX,GACZ,OACE,qBAAKR,UAAU,MAAf,SACE,cAAC,EAAD,OCANoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.b5345660.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport './App.css';\r\n\r\nconst Todo = ({todo , todos , setTodos , index }) =>{\r\n    function del(){\r\n        const newTodos = todos.filter((ele , i )=> i !== index);\r\n        setTodos(newTodos);\r\n        if (newTodos.length === 0){\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"Todo\">\r\n            <p >{todo}</p>\r\n            <button onClick={del}>X</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Todoapp( props ) {\r\n    let [value , setValue] = useState([\"\"]);\r\n    const [todos , setTodos] = useState([\"Tha 19\", \"Tha 20\" ]);\r\n    // useEffect(()=>{\r\n    //     setTodos([]);\r\n    // },[]);\r\n    function change(e){\r\n        setValue(e.target.value); \r\n        console.log(value);\r\n        value = {value};\r\n    }\r\n    function click(){\r\n        setTodos([...todos, value]);\r\n        setValue(\"\");\r\n    }\r\n    return (\r\n        <div className=\"Todoapp\">\r\n            <input type=\"text\" onChange={change} value={value} /> <br />\r\n            <button onClick={click}>ADD</button>\r\n            <div className=\"todolist\">\r\n            {todos.map((todo , index)=>(\r\n                <Todo key={index} todo={todo} todos={todos} setTodos={setTodos} index={index}/>\r\n            ))}\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default Todoapp;","import Todoapp from './Todoapp'\nimport './App.css';\nfunction App( props ) {\n  return (\n    <div className=\"App\">\n      <Todoapp />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}